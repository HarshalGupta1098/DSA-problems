# Approach -> 
# -> Just split the string and follow the question's instructions
# -> First split the input to get the number and the format.
# -> Now, split the number according to the format.
# -> Now, pass that splitted part to function f(s).
# -> Now, find the consecutive count of the ith character and fill 'ans []' according to the given question rules.

sss = ["double", "triple", "quadruple", "quintuple", "sextuple", "septuple", "octuple", "nonuple", "decuple"]
ssss = ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"]
def f(s):
    ans = []
    
    prev = s[0]
    count = 1
    for i in range(1, len(s)):
        if s[i] == prev:
            count += 1
        else:
            if 2 <= count <= 10:
                ans.append(sss[count-2])
                ans.append(ssss[int(prev)])
            elif count > 10 or count == 1:
                while count:
                    ans.append(ssss[int(prev)])
                    count -= 1
                
            count = 1
            prev = s[i]
            
    if 2 <= count <= 10:
        ans.append(sss[count-2])
        ans.append(ssss[int(prev)])
    elif count > 10 or count == 1:
        while count:
            ans.append(ssss[int(prev)])
            count -= 1
            
    return ' '.join(ans)

t = int(input())
for _ in range(t):
    nums = input().split()
    s = list(map(int, nums[1].split('-')))
    nums = nums[0]
    
    start = 0
    arr = []
    for end in s:
        arr.append(f(nums[start: start+end]))
        start += end
    
    print(f"Case #{_+1}: ", end="")
    print(*arr)
